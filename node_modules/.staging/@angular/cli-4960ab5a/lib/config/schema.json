{
  "$schema": "http://json-schema.org/draft-07/schema#",
  "id": "https://angular.io/schemas/cli-1/schema",
  "title": "Angular CLI Configuration",
  "type": "object",
  "properties": {
    "$schema": {
      "type": "string"
    },
    "version": {
      "$ref": "#/definitions/fileVersion"
    },
    "cli": {
      "$ref": "#/definitions/cliOptions"
    },
    "schematics": {
      "$ref": "#/definitions/schematicOptions"
    },
    "newProjectRoot": {
      "type": "string",
      "description": "Path where new projects will be created."
    },
    "defaultProject": {
      "type": "string",
      "description": "Default project name used in commands."
    },
    "projects": {
      "type": "object",
      "patternProperties": {
        "^[a-zA-Z][.0-9a-zA-Z]*(-[.0-9a-zA-Z]*)*$": {
          "$ref": "#/definitions/project"
        }
      },
      "additionalProperties": false
    }
  },
  "additionalProperties": false,
  "required": [
    "version"
  ],
  "definitions": {
    "cliOptions": {
      "type": "object",
      "properties": {
        "defaultCollection": {
          "description": "The default schematics collection to use.",
          "type": "string"
        },
        "packageManager": {
          "description": "Specify which package manager tool to use.",
          "type": "string",
          "enum": [ "npm", "cnpm", "yarn" ]
        },
        "warnings": {
          "description": "Control CLI specific console warnings",
          "type": "object",
          "properties": {
            "versionMismatch": {
              "description": "Show a warning when the global version is newer than the local one.",
              "type": "boolean"
            },
            "typescriptMismatch": {
              "description": "Show a warning when the TypeScript version is incompatible.",
              "type": "boolean"
            }
          }
        }
      },
      "additionalProperties": false
    },
    "schematicOptions": {
      "type": "object",
      "properties": {
        "@schematics/angular:component": {
          "type": "object",
          "properties": {
            "inlineStyle": {
              "description": "Specifies if the style will be in the ts file.",
              "type": "boolean",
              "default": false,
              "alias": "s"
            },
            "inlineTemplate": {
              "description": "Specifies if the template will be in the ts file.",
              "type": "boolean",
              "default": false,
              "alias": "t"
            },
            "viewEncapsulation": {
              "description": "Specifies the view encapsulation strategy.",
              "enum": ["Emulated", "Native", "None"],
              "type": "string",
              "alias": "v"
            },
            "changeDetection": {
              "description": "Specifies the change detection strategy.",
              "enum": ["Default", "OnPush"],
              "type": "string",
              "default": "Default",
              "alias": "c"
            },
            "prefix": {
              "type": "string",
              "format": "html-selector",
              "description": "The prefix to apply to generated selectors.",
              "alias": "p"
            },
            "styleext": {
              "description": "The file extension to be used for style files.",
              "type": "string",
              "default": "css"
            },
            "spec": {
              "type": "boolean",
              "description": "Specifies if a spec file is generated.",
              "default": true
            },
            "flat": {
              "type": "boolean",
              "description": "Flag to indicate if a dir is created.",
              "default": false
            },
            "skipImport": {
              "type": "boolean",
              "description": "Flag to skip the module import.",
              "default": false
            },
            "selector": {
              "type": "string",
              "format": "html-selector",
              "description": "The selector to use for the component."
            },
            "module":  {
              "type": "string",
              "description": "Allows specification of the declaring module.",
              "alias": "m"
            },
            "export": {
              "type": "boolean",
              "default": false,
              "description": "Specifies if declaring module exports the component."
            }
          }
        },
        "@schematics/angular:directive": {
          "type": "object",
          "properties": {
            "prefix": {
              "type": "string",
              "format": "html-selector",
              "description": "The prefix to apply to generated selectors.",
              "default": "app",
              "alias": "p"
            },
            "spec": {
              "type": "boolean",
              "description": "Specifies if a spec file is generated.",
              "default": true
            },
            "skipImport": {
              "type": "boolean",
              "description": "Flag to skip the module import.",
              "default": false
            },
            "selector": {
              "type": "string",
              "format": "html-selector",
              "description": "The selector to use for the directive."
            },
            "flat": {
              "type": "boolean",
              "description": "Flag to indicate if a dir is created.",
              "default": true
            },
            "module":  {
              "type": "string",
              "description": "Allows specification of the declaring module.",
              "alias": "m"
            },
            "export": {
              "type": "boolean",
              "default": false,
              "description": "Specifies if declaring module exports the directive."
            }
          }
        },
        "@schematics/angular:module": {
          "type": "object",
          "properties": {
            "routing": {
              "type": "boolean",
              "description": "Generates a routing module.",
              "default": false
            },
            "routingScope": {
              "enum": ["Child", "Root"],
              "type": "string",
              "description": "The scope for the generated routing.",
              "default": "Child"
            },
            "spec": {
              "type": "boolean",
              "description": "Specifies if a spec file is generated.",
              "default": true
            },
            "flat": {
              "type": "boolean",
              "description": "Flag to indicate if a dir is created.",
              "default": false
            },
            "commonModule": {
              "type": "boolean",
              "description": "Flag to control whether the CommonModule is imported.",
              "default": true,
              "visible": false
            },
            "module":  {
              "type": "string",
              "description": "Allows specification of the declaring module.",
              "alias": "m"
            }
          }
        },
        "@schematics/angular:service": {
          "type": "object",
          "properties": {
            "flat": {
              "type": "boolean",
              "default": true,
              "description": "Flag to indicate if a dir is created."
            },
            "spec": {
              "type": "boolean",
              "default": true,
              "description": "Specifies if a spec file is generated."
            }
          }
        },
        "@schematics/angular:pipe": {
          "type": "object",
          "properties": {
            "flat": {
              "type": "boolean",
              "default": true,
              "description": "Flag to indicate if a dir is created."
            },
            "spec": {
              "type": "boolean",
              "default": true,
              "description": "Specifies if a spec file is generated."
            },
            "skipImport": {
              "type": "boolean",
              "default": false,
              "description": "Allows for skipping the module import."
            },
            "module": {
              "type": "string",
              "default": "",
              "description": "Allows specification of the declaring module.",
              "alias": "m"
            },
            "export": {
              "type": "boolean",
              "default": false,
              "description": "Specifies if declaring module exports the pipe."
            }
          }
        },
        "@schematics/angular:class": {
          "type": "object",
          "properties": {
            "spec": {
              "type": "boolean",
              "default": true,
              "description": "Specifies if a spec file is generated."
            }
          }
        }
      },
      "additionalProperties": {
        "type": "object"
      }
    },
    "fileVersion": {
      "type": "integer",
      "description": "File format version",
      "minimum": 1
    },
    "project": {
      "type": "object",
      "properties": {
        "cli": {
          "$ref": "#/definitions/cliOptions"
        },
        "schematics": {
          "$ref": "#/definitions/schematicOptions"
        },
        "prefix": {
          "type": "string",
          "format": "html-selector",
          "description": "The prefix to apply to generated selectors."
        },
        "root": {
          "type": "string",
          "description": "Root of the project files."
        },
        "sourceRoot": {
          "type": "string",
          "description": "The root of the source files, assets and index.html file structure."
        },
        "projectType": {
          "type": "string",
          "description": "Project type.",
          "enum": [
            "application",
            "library"
          ]
        },
        "architect": {
          "type": "object",
          "additionalProperties": {
            "$ref": "#/definitions/project/definitions/target"
          }
        }
      },
      "required": [
        "root",
        "projectType"
      ],
      "additionalProperties": false,
      "patternProperties": {
        "^[a-z]{1,3}-.*": {}
      },
      "definitions": {
        "target": {
          "oneOf": [
            {
              "$comment": "Extendable target with custom builder",
              "type": "object",
              "properties": {
                "builder": {
                  "type": "string",
                  "description": "The builder used for this package.",
                  "not": {
                    "enum": [
                      "@angular-devkit/build-angular:app-shell",
                      "@angular-devkit/build-angular:browser",
                      "@angular-devkit/build-angular:dev-server",
                      "@angular-devkit/build-angular:extract-i18n",
                      "@angular-devkit/build-angular:karma",
                      "@angular-devkit/build-angular:protractor",
                      "@angular-devkit/build-angular:server",
                      "@angular-devkit/build-angular:tslint"
                    ]
                  }
                },
                "options": {
                  "type": "object"
                },
                "configurations": {
                  "type": "object",
                  "description": "A map of alternative target options.",
                  "additionalProperties": {
                    "type": "object"
                  }
                }
              },
              "required": [
                "builder"
              ]
            },
            {
              "type": "object",
              "properties": {
                "builder": { "const": "@angular-devkit/build-angular:app-shell" },
                "options": { "$ref": "#/definitions/targetOptions/definitions/appShell" },
                "configurations": {
                  "type": "object",
                  "additionalProperties": { "$ref": "#/definitions/targetOptions/definitions/appShell" }
                }
              }
            },
            {
              "type": "object",
              "properties": {
                "builder": { "const": "@angular-devkit/build-angular:browser" },
                "options": { "$ref": "#/definitions/targetOptions/definitions/browser" },
                "configurations": {
                  "type": "object",
                  "additionalProperties": { "$ref": "#/definitions/targetOptions/definitions/browser" }
                }
              }
            },
            {
              "type": "object",
              "properties": {
                "builder": { "const": "@angular-devkit/build-angular:dev-server" },
                "options": { "$ref": "#/definitions/targetOptions/definitions/devServer" },
                "configurations": {
                  "type": "object",
                  "additionalProperties": { "$ref": "#/definitions/targetOptions/definitions/devServer" }
                }
              }
            },
            {
              "type": "object",
              "properties": {
                "builder": { "const": "@angular-devkit/build-angular:extract-i18n" },
                "options": { "$ref": "#/definitions/targetOptions/definitions/extracti18n" },
                "configurations": {
                  "type": "object",
                  "additionalProperties": { "$ref": "#/definitions/targetOptions/definitions/extracti18n" }
                }
              }
            },
            {
              "type": "object",
              "properties": {
                "builder": { "const": "@angular-devkit/build-angular:karma" },
                "options": { "$ref": "#/definitions/targetOptions/definitions/karma" },
                "configurations": {
                  "type": "object",
                  "additionalProperties": { "$ref": "#/definitions/targetOptions/definitions/karma" }
                }
              }
            },
            {
              "type": "object",
              "properties": {
                "builder": { "const": "@angular-devkit/build-angular:protractor" },
                "options": { "$ref": "#/definitions/targetOptions/definitions/protractor" },
                "configurations": {
                  "type": "object",
                  "additionalProperties": { "$ref": "#/definitions/targetOptions/definitions/protractor" }
                }
              }
            },
            {
              "type": "object",
              "properties": {
                "builder": { "const": "@angular-devkit/build-angular:server" },
                "options": { "$ref": "#/definitions/targetOptions/definitions/server" },
                "configurations": {
                  "type": "object",
                  "additionalProperties": { "$ref": "#/definitions/targetOptions/definitions/server" }
                }
              }
            },
            {
              "type": "object",
              "properties": {
                "builder": { "const": "@angular-devkit/build-angular:tslint" },
                "options": { "$ref": "#/definitions/targetOptions/definitions/tslint" },
                "configurations": {
                  "type": "object",
                  "additionalProperties": { "$ref": "#/definitions/targetOptions/definitions/tslint" }
                }
              }
            }
          ]
        }
      }
    },
    "global": {
      "type": "object",
      "properties": {
        "$schema": {
          "type": "string",
          "format": "uri"
        },
        "version": {
          "$ref": "#/definitions/fileVersion"
        },
        "cli": {
          "$ref": "#/definitions/cliOptions"
        },
        "schematics": {
          "$ref": "#/definitions/schematicOptions"
        }
      },
      "required": [
        "version"
      ]
    },
    "targetOptions": {
      "type": "null",
      "definitions": {
        "appShell": {
          "description": "App Shell target options for Build Facade.",
          "type": "object",
          "properties": {
            "browserTarget": {
              "type": "string",
              "description": "Target to build."
            },
            "serverTarget": {
              "type": "string",
              "description": "Server target to use for rendering the app shell."
            },
            "appModuleB